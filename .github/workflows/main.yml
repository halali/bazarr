name: Node.js CI

on:
  push:
    branches: [ frontend-upgrade ]
  pull_request:
    branches: [ frontend-upgrade ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      working-directory: ./frontend

    strategy:
      matrix:
        node-version: [15.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install
      working-directory: ${{ env.working-directory }}

    - name: Build
      run: npm run build
      working-directory: ${{ env.working-directory }}
    
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: react-github-actions-build
        path: build
    release:
    runs-on: ubuntu-latest
    # We specify that deploys needs to
    # finish before we create a release
    needs: deploy
    steps:
      # Download previously shared build
      - name: Get artifact
        uses: actions/download-artifact@v1
        with:
          name: react-github-actions-build
      # Zip the build using external action
      - name: Zip build
        uses: thedoctor0/zip-release@master
        with:
          filename: react-github-actions-release-build.zip
          path: react-github-actions-build
      # Upload as an artifact of the current workflow
      - name: Upload build zip artifact
        uses: actions/upload-artifact@v1
        with:
          name: react-github-actions-release-build.zip
          path: react-github-actions-release-build.zip
      # Make official GitHub release which will trigger
      # sending the mail with link for access
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: react-github-actions-release-build.zip
          body: https://react-github-actions.s3.amazonaws.com/index.html
          token: ${{ secrets.GITHUB_TOKEN }}
